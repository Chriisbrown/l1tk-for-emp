-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity InputRouterTop_IR_DTC_2S_1_A is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    hInputStubs_V_dout : IN STD_LOGIC_VECTOR (38 downto 0);
    hInputStubs_V_empty_n : IN STD_LOGIC;
    hInputStubs_V_read : OUT STD_LOGIC;
    bx_V : IN STD_LOGIC_VECTOR (2 downto 0);
    hLinkWord_V : IN STD_LOGIC_VECTOR (19 downto 0);
    hPhBnWord_V : IN STD_LOGIC_VECTOR (11 downto 0);
    bx_o_V : OUT STD_LOGIC_VECTOR (2 downto 0);
    bx_o_V_ap_vld : OUT STD_LOGIC;
    hOutputStubs_0_dataarray_data_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    hOutputStubs_0_dataarray_data_V_ce0 : OUT STD_LOGIC;
    hOutputStubs_0_dataarray_data_V_we0 : OUT STD_LOGIC;
    hOutputStubs_0_dataarray_data_V_d0 : OUT STD_LOGIC_VECTOR (35 downto 0);
    hOutputStubs_1_dataarray_data_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    hOutputStubs_1_dataarray_data_V_ce0 : OUT STD_LOGIC;
    hOutputStubs_1_dataarray_data_V_we0 : OUT STD_LOGIC;
    hOutputStubs_1_dataarray_data_V_d0 : OUT STD_LOGIC_VECTOR (35 downto 0) );
end;


architecture behav of InputRouterTop_IR_DTC_2S_1_A is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "InputRouterTop_IR_DTC_2S_1_A,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2104-2L-e,HLS_INPUT_CLOCK=4.167000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.318125,HLS_SYN_LAT=112,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=0,HLS_SYN_FF=1115,HLS_SYN_LUT=2551,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv13_700 : STD_LOGIC_VECTOR (12 downto 0) := "0011100000000";
    constant ap_const_lv13_500 : STD_LOGIC_VECTOR (12 downto 0) := "0010100000000";
    constant ap_const_lv13_300 : STD_LOGIC_VECTOR (12 downto 0) := "0001100000000";
    constant ap_const_lv13_200 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_const_lv13_100 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_6B : STD_LOGIC_VECTOR (6 downto 0) := "1101011";
    constant ap_const_lv39_0 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv20_FFFFF : STD_LOGIC_VECTOR (19 downto 0) := "11111111111111111111";
    constant ap_const_lv20_1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_const_lv20_2 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000010";
    constant ap_const_lv20_3 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000011";
    constant ap_const_lv20_4 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000100";
    constant ap_const_lv20_5 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000101";
    constant ap_const_lv20_6 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000110";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv64_3F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv11_140 : STD_LOGIC_VECTOR (10 downto 0) := "00101000000";
    constant ap_const_lv12_F00 : STD_LOGIC_VECTOR (11 downto 0) := "111100000000";
    constant ap_const_lv12_3F : STD_LOGIC_VECTOR (11 downto 0) := "000000111111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv11_240 : STD_LOGIC_VECTOR (10 downto 0) := "01001000000";
    constant ap_const_lv12_E00 : STD_LOGIC_VECTOR (11 downto 0) := "111000000000";
    constant ap_const_lv11_2FF : STD_LOGIC_VECTOR (10 downto 0) := "01011111111";
    constant ap_const_lv11_380 : STD_LOGIC_VECTOR (10 downto 0) := "01110000000";
    constant ap_const_lv12_D00 : STD_LOGIC_VECTOR (11 downto 0) := "110100000000";
    constant ap_const_lv12_7F : STD_LOGIC_VECTOR (11 downto 0) := "000001111111";
    constant ap_const_lv11_4FF : STD_LOGIC_VECTOR (10 downto 0) := "10011111111";
    constant ap_const_lv11_580 : STD_LOGIC_VECTOR (10 downto 0) := "10110000000";
    constant ap_const_lv12_B00 : STD_LOGIC_VECTOR (11 downto 0) := "101100000000";
    constant ap_const_lv11_6FF : STD_LOGIC_VECTOR (10 downto 0) := "11011111111";
    constant ap_const_lv12_900 : STD_LOGIC_VECTOR (11 downto 0) := "100100000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv33_7 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000111";
    constant ap_const_lv33_3 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000011";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv14_3FFF : STD_LOGIC_VECTOR (13 downto 0) := "11111111111111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal icmp_ln240_fu_790_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal bx_o_V_1_ack_in : STD_LOGIC;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal bx_o_V_1_data_reg : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal bx_o_V_1_vld_reg : STD_LOGIC := '0';
    signal bx_o_V_1_vld_in : STD_LOGIC;
    signal cLUT_index : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    signal kPhiCorrtable_L1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kPhiCorrtable_L1_ce0 : STD_LOGIC;
    signal kPhiCorrtable_L1_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal kPhiCorrtable_L1_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal kPhiCorrtable_L1_ce1 : STD_LOGIC;
    signal kPhiCorrtable_L1_q1 : STD_LOGIC_VECTOR (14 downto 0);
    signal kPhiCorrtable_L2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kPhiCorrtable_L2_ce0 : STD_LOGIC;
    signal kPhiCorrtable_L2_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal kPhiCorrtable_L2_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal kPhiCorrtable_L2_ce1 : STD_LOGIC;
    signal kPhiCorrtable_L2_q1 : STD_LOGIC_VECTOR (13 downto 0);
    signal kPhiCorrtable_L3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kPhiCorrtable_L3_ce0 : STD_LOGIC;
    signal kPhiCorrtable_L3_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal kPhiCorrtable_L3_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal kPhiCorrtable_L3_ce1 : STD_LOGIC;
    signal kPhiCorrtable_L3_q1 : STD_LOGIC_VECTOR (13 downto 0);
    signal kPhiCorrtable_L4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal kPhiCorrtable_L4_ce0 : STD_LOGIC;
    signal kPhiCorrtable_L4_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal kPhiCorrtable_L4_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal kPhiCorrtable_L4_ce1 : STD_LOGIC;
    signal kPhiCorrtable_L4_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal kPhiCorrtable_L5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal kPhiCorrtable_L5_ce0 : STD_LOGIC;
    signal kPhiCorrtable_L5_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal kPhiCorrtable_L5_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal kPhiCorrtable_L5_ce1 : STD_LOGIC;
    signal kPhiCorrtable_L5_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal kPhiCorrtable_L6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal kPhiCorrtable_L6_ce0 : STD_LOGIC;
    signal kPhiCorrtable_L6_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal kPhiCorrtable_L6_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal kPhiCorrtable_L6_ce1 : STD_LOGIC;
    signal kPhiCorrtable_L6_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal hInputStubs_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal do_init_reg_493 : STD_LOGIC_VECTOR (0 downto 0);
    signal cStubCounter_0_i159_reg_509 : STD_LOGIC_VECTOR (6 downto 0);
    signal xor_ln212_2_rewind_reg_523 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln212_1_rewind_reg_537 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln212_rewind_reg_551 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_rewind_reg_565 : STD_LOGIC_VECTOR (0 downto 0);
    signal bx_V173_rewind_reg_579 : STD_LOGIC_VECTOR (2 downto 0);
    signal hLinkWord_V174_rewind_reg_593 : STD_LOGIC_VECTOR (19 downto 0);
    signal xor_ln212_2_phi_reg_607 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln212_2_phi_reg_607_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln212_2_phi_reg_607_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln212_1_phi_reg_619 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln212_1_phi_reg_619_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln212_1_phi_reg_619_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln212_phi_reg_631 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln212_phi_reg_631_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln212_phi_reg_631_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_phi_reg_643 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_phi_reg_643_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_phi_reg_643_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal bx_V173_phi_reg_655 : STD_LOGIC_VECTOR (2 downto 0);
    signal bx_V173_phi_reg_655_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal bx_V173_phi_reg_655_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal hLinkWord_V174_phi_reg_668 : STD_LOGIC_VECTOR (19 downto 0);
    signal hLinkWord_V174_phi_reg_668_pp0_iter2_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal hLinkWord_V174_phi_reg_668_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal hNStubs_V_1_0158_reg_680 : STD_LOGIC_VECTOR (6 downto 0);
    signal hNStubs_V_0_0157_reg_694 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_mux_do_init_phi_fu_497_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln212_fu_750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln212_1_fu_764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln212_2_fu_778_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal hStub_V_reg_2115 : STD_LOGIC_VECTOR (38 downto 0);
    signal hStub_V_reg_2115_pp0_iter1_reg : STD_LOGIC_VECTOR (38 downto 0);
    signal hStub_V_reg_2115_pp0_iter2_reg : STD_LOGIC_VECTOR (38 downto 0);
    signal hStub_V_reg_2115_pp0_iter3_reg : STD_LOGIC_VECTOR (38 downto 0);
    signal cStubCounter_fu_784_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal cStubCounter_reg_2131 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln240_reg_2136 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln240_reg_2136_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln240_reg_2136_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln240_reg_2136_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln240_reg_2136_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_2140 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_2140_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_2140_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_2140_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln647_fu_801_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln647_reg_2144 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln647_reg_2144_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln647_reg_2144_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln647_reg_2144_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_4_fu_804_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_4_reg_2148 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_4_reg_2148_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_4_reg_2148_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal Hi_fu_813_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal Hi_reg_2154 : STD_LOGIC_VECTOR (3 downto 0);
    signal Hi_reg_2154_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal Hi_reg_2154_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln879_1_fu_931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_reg_2159 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_reg_2159_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_reg_2159_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_1_fu_1096_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_1_reg_2187 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_2_fu_1102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_2_reg_2192 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_3_fu_1145_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_3_reg_2202 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_4_fu_1151_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_4_reg_2207 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_5_fu_1184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_5_reg_2217 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_6_fu_1190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_6_reg_2222 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_7_fu_1223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_7_reg_2232 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_8_fu_1229_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_8_reg_2237 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_9_fu_1262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_9_reg_2247 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_11_fu_1357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_11_reg_2262 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_12_fu_1363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_12_reg_2267 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_13_fu_1406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_13_reg_2277 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_14_fu_1412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_14_reg_2282 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_15_fu_1445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_15_reg_2292 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_16_fu_1451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_16_reg_2297 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_17_fu_1484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_17_reg_2307 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_18_fu_1490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_18_reg_2312 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_19_fu_1523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_19_reg_2322 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln131_14_fu_1608_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln131_14_reg_2332 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln131_29_fu_1675_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln131_29_reg_2337 : STD_LOGIC_VECTOR (15 downto 0);
    signal hAStub_data_V_reg_2342 : STD_LOGIC_VECTOR (35 downto 0);
    signal xor_ln338_fu_2031_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln338_reg_2348 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln321_fu_2037_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln321_reg_2355 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_phi_mux_cStubCounter_0_i159_phi_fu_513_p6 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_mux_xor_ln212_2_rewind_phi_fu_527_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_xor_ln212_1_rewind_phi_fu_541_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_xor_ln212_rewind_phi_fu_555_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_p_rewind_phi_fu_569_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_bx_V173_rewind_phi_fu_583_p6 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_hLinkWord_V174_rewind_phi_fu_597_p6 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter0_xor_ln212_2_phi_reg_607 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_xor_ln212_2_phi_reg_607 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_xor_ln212_1_phi_reg_619 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_xor_ln212_1_phi_reg_619 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_xor_ln212_phi_reg_631 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_xor_ln212_phi_reg_631 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_p_phi_reg_643 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_p_phi_reg_643 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_bx_V173_phi_reg_655 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_reg_pp0_iter1_bx_V173_phi_reg_655 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_hLinkWord_V174_phi_phi_fu_672_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter0_hLinkWord_V174_phi_reg_668 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter1_hLinkWord_V174_phi_reg_668 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_mux_hNStubs_V_1_2_phi_fu_727_p6 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_mux_hNStubs_V_0_2_phi_fu_712_p6 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_reg_pp0_iter5_hNStubs_V_0_2_reg_708 : STD_LOGIC_VECTOR (6 downto 0);
    signal hNStubs_1_V_1_fu_2054_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_reg_pp0_iter5_hNStubs_V_1_2_reg_723 : STD_LOGIC_VECTOR (6 downto 0);
    signal hNStubs_1_V_2_fu_2062_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln131_fu_1077_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln131_fu_1130_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln131_2_fu_1179_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln131_4_fu_1218_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln131_5_fu_1257_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln131_6_fu_1282_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln131_15_fu_1338_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln131_8_fu_1391_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln131_10_fu_1440_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln131_12_fu_1479_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln131_13_fu_1518_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln131_14_fu_1543_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_fu_2077_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln879_2_fu_937_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_3_fu_943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_4_fu_949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_5_fu_955_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_6_fu_961_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal trunc_ln212_fu_746_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_756_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_770_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Lo_fu_827_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal Hi_1_fu_821_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln647_fu_839_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln647_1_fu_843_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln647_fu_833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln647_fu_857_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln647_2_fu_869_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_6_fu_847_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln647_1_fu_863_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln647_fu_875_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln647_3_fu_891_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln647_3_fu_899_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln647_2_fu_883_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln647_2_fu_905_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln647_3_fu_909_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal lshr_ln647_fu_913_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal lshr_ln647_1_fu_919_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Result_2_fu_925_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln2_fu_1020_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal hBend_V_fu_1011_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal rbin_V_fu_1029_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_fu_1035_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln113_fu_1007_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln131_fu_1043_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln131_fu_1047_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_10_fu_1061_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln131_fu_1071_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln131_1_fu_1053_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_1086_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln131_2_fu_1057_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln131_1_fu_1108_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln131_1_fu_1114_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln131_2_fu_1122_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_12_fu_1135_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln131_2_fu_1157_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln131_3_fu_1163_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln131_4_fu_1171_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln131_3_fu_1196_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln131_5_fu_1202_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln131_6_fu_1210_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln131_4_fu_1235_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln131_7_fu_1241_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln131_8_fu_1249_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln131_5_fu_1268_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln131_9_fu_1274_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal hBend_V_1_fu_1287_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_fu_1296_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln131_4_fu_1304_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln131_6_fu_1308_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_18_fu_1322_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln131_10_fu_1332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln131_3_fu_1314_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_1347_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln131_5_fu_1318_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln131_7_fu_1369_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln131_16_fu_1375_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln131_17_fu_1383_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_20_fu_1396_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln131_8_fu_1418_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln131_18_fu_1424_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln131_19_fu_1432_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln131_9_fu_1457_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln131_20_fu_1463_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln131_21_fu_1471_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln131_10_fu_1496_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln131_22_fu_1502_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln131_23_fu_1510_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln131_11_fu_1529_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln131_24_fu_1535_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal and_ln131_fu_1548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln131_1_fu_1552_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal and_ln131_1_fu_1556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln131_3_fu_1560_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln131_10_fu_1572_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln131_11_fu_1580_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal and_ln131_2_fu_1564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln131_7_fu_1588_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln131_3_fu_1568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln131_12_fu_1592_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln131_13_fu_1600_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln131_4_fu_1615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln131_9_fu_1619_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal and_ln131_5_fu_1623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln131_11_fu_1627_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln131_25_fu_1639_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln131_26_fu_1647_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal and_ln131_6_fu_1631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln131_15_fu_1655_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln131_7_fu_1635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln131_27_fu_1659_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln131_28_fu_1667_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln212_fu_1694_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_1705_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_fu_1718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln555_fu_1691_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1737_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln215_fu_1746_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln215_fu_1750_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_fu_1753_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_14_fu_1763_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1354_fu_1759_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal hPhiCorr_V_1_fu_1771_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_1783_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln891_fu_1793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln136_fu_1779_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_2_fu_1799_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_16_fu_1807_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_17_fu_1821_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln681_fu_1817_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal zext_ln681_1_fu_1831_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln681_fu_1835_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln681_1_fu_1842_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_21_fu_1855_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln215_1_fu_1864_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln215_1_fu_1868_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_8_fu_1871_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_22_fu_1881_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1354_1_fu_1877_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal hPhiCorr_V_3_fu_1889_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_1901_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln891_1_fu_1911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln136_1_fu_1897_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_4_fu_1917_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_24_fu_1925_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_25_fu_1939_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln681_2_fu_1935_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal zext_ln681_3_fu_1949_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln681_2_fu_1953_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln681_3_fu_1960_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Result_s_fu_1849_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Result_1_fu_1967_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln647_1_fu_1973_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln647_2_fu_1977_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_1989_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_1996_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_1729_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln647_4_fu_1981_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln647_1_fu_2003_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln212_1_fu_1712_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln212_2_fu_1723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln212_fu_1699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln879_fu_2011_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln338_2_fu_2025_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln338_1_fu_2019_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal hEntries_V_fu_2041_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal hNStubs_0_V_fu_2048_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_9_fu_2070_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_0to4 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_388 : BOOLEAN;
    signal ap_condition_56 : BOOLEAN;
    signal ap_condition_385 : BOOLEAN;
    signal ap_condition_1421 : BOOLEAN;
    signal ap_condition_1424 : BOOLEAN;
    signal ap_condition_1427 : BOOLEAN;
    signal ap_condition_1430 : BOOLEAN;
    signal ap_condition_1185 : BOOLEAN;

    component InputRouterTop_IR_DTC_2S_1_A_kPhiCorrtable_L1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component InputRouterTop_IR_DTC_2S_1_A_kPhiCorrtable_L2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component InputRouterTop_IR_DTC_2S_1_A_kPhiCorrtable_L3 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component InputRouterTop_IR_DTC_2S_1_A_kPhiCorrtable_L4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component InputRouterTop_IR_DTC_2S_1_A_kPhiCorrtable_L5 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component InputRouterTop_IR_DTC_2S_1_A_kPhiCorrtable_L6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    kPhiCorrtable_L1_U : component InputRouterTop_IR_DTC_2S_1_A_kPhiCorrtable_L1
    generic map (
        DataWidth => 15,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kPhiCorrtable_L1_address0,
        ce0 => kPhiCorrtable_L1_ce0,
        q0 => kPhiCorrtable_L1_q0,
        address1 => kPhiCorrtable_L1_address1,
        ce1 => kPhiCorrtable_L1_ce1,
        q1 => kPhiCorrtable_L1_q1);

    kPhiCorrtable_L2_U : component InputRouterTop_IR_DTC_2S_1_A_kPhiCorrtable_L2
    generic map (
        DataWidth => 14,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kPhiCorrtable_L2_address0,
        ce0 => kPhiCorrtable_L2_ce0,
        q0 => kPhiCorrtable_L2_q0,
        address1 => kPhiCorrtable_L2_address1,
        ce1 => kPhiCorrtable_L2_ce1,
        q1 => kPhiCorrtable_L2_q1);

    kPhiCorrtable_L3_U : component InputRouterTop_IR_DTC_2S_1_A_kPhiCorrtable_L3
    generic map (
        DataWidth => 14,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kPhiCorrtable_L3_address0,
        ce0 => kPhiCorrtable_L3_ce0,
        q0 => kPhiCorrtable_L3_q0,
        address1 => kPhiCorrtable_L3_address1,
        ce1 => kPhiCorrtable_L3_ce1,
        q1 => kPhiCorrtable_L3_q1);

    kPhiCorrtable_L4_U : component InputRouterTop_IR_DTC_2S_1_A_kPhiCorrtable_L4
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kPhiCorrtable_L4_address0,
        ce0 => kPhiCorrtable_L4_ce0,
        q0 => kPhiCorrtable_L4_q0,
        address1 => kPhiCorrtable_L4_address1,
        ce1 => kPhiCorrtable_L4_ce1,
        q1 => kPhiCorrtable_L4_q1);

    kPhiCorrtable_L5_U : component InputRouterTop_IR_DTC_2S_1_A_kPhiCorrtable_L5
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kPhiCorrtable_L5_address0,
        ce0 => kPhiCorrtable_L5_ce0,
        q0 => kPhiCorrtable_L5_q0,
        address1 => kPhiCorrtable_L5_address1,
        ce1 => kPhiCorrtable_L5_ce1,
        q1 => kPhiCorrtable_L5_q1);

    kPhiCorrtable_L6_U : component InputRouterTop_IR_DTC_2S_1_A_kPhiCorrtable_L6
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kPhiCorrtable_L6_address0,
        ce0 => kPhiCorrtable_L6_ce0,
        q0 => kPhiCorrtable_L6_q0,
        address1 => kPhiCorrtable_L6_address1,
        ce1 => kPhiCorrtable_L6_ce1,
        q1 => kPhiCorrtable_L6_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_bx_V173_phi_reg_655_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_56)) then
                if ((ap_phi_mux_do_init_phi_fu_497_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_bx_V173_phi_reg_655 <= bx_V;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_bx_V173_phi_reg_655 <= ap_phi_reg_pp0_iter0_bx_V173_phi_reg_655;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_hLinkWord_V174_phi_reg_668_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_56)) then
                if ((ap_phi_mux_do_init_phi_fu_497_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_hLinkWord_V174_phi_reg_668 <= hLinkWord_V;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_hLinkWord_V174_phi_reg_668 <= ap_phi_reg_pp0_iter0_hLinkWord_V174_phi_reg_668;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_p_phi_reg_643_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_56)) then
                if ((ap_phi_mux_do_init_phi_fu_497_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_p_phi_reg_643 <= hLinkWord_V(16 downto 16);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_phi_reg_643 <= ap_phi_reg_pp0_iter0_p_phi_reg_643;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_xor_ln212_1_phi_reg_619_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_56)) then
                if ((ap_phi_mux_do_init_phi_fu_497_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_xor_ln212_1_phi_reg_619 <= xor_ln212_1_fu_764_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_xor_ln212_1_phi_reg_619 <= ap_phi_reg_pp0_iter0_xor_ln212_1_phi_reg_619;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_xor_ln212_2_phi_reg_607_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_56)) then
                if ((ap_phi_mux_do_init_phi_fu_497_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_xor_ln212_2_phi_reg_607 <= xor_ln212_2_fu_778_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_xor_ln212_2_phi_reg_607 <= ap_phi_reg_pp0_iter0_xor_ln212_2_phi_reg_607;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_xor_ln212_phi_reg_631_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_56)) then
                if ((ap_phi_mux_do_init_phi_fu_497_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_xor_ln212_phi_reg_631 <= xor_ln212_fu_750_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_xor_ln212_phi_reg_631 <= ap_phi_reg_pp0_iter0_xor_ln212_phi_reg_631;
                end if;
            end if; 
        end if;
    end process;

    bx_V173_phi_reg_655_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_385)) then
                if ((do_init_reg_493 = ap_const_lv1_0)) then 
                    bx_V173_phi_reg_655 <= ap_phi_mux_bx_V173_rewind_phi_fu_583_p6;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    bx_V173_phi_reg_655 <= ap_phi_reg_pp0_iter1_bx_V173_phi_reg_655;
                end if;
            end if; 
        end if;
    end process;

    bx_o_V_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (bx_o_V_1_vld_reg = ap_const_logic_0) and (bx_o_V_1_vld_in = ap_const_logic_1))) then 
                bx_o_V_1_vld_reg <= ap_const_logic_1;
            elsif (((bx_o_V_1_vld_in = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1) and (bx_o_V_1_vld_reg = ap_const_logic_1))) then 
                bx_o_V_1_vld_reg <= ap_const_logic_0;
            end if; 
        end if;
    end process;

    cLUT_index_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1185)) then
                if ((icmp_ln879_1_fu_931_p2 = ap_const_lv1_1)) then 
                    cLUT_index(8) <= '0';
                    cLUT_index(9) <= '0';
                    cLUT_index(10) <= '0';
                elsif (((icmp_ln879_1_fu_931_p2 = ap_const_lv1_0) and (icmp_ln879_2_fu_937_p2 = ap_const_lv1_1))) then 
                    cLUT_index(8) <= '1';
                    cLUT_index(9) <= '0';
                    cLUT_index(10) <= '0';
                elsif ((ap_const_boolean_1 = ap_condition_1430)) then 
                    cLUT_index(8) <= '0';
                    cLUT_index(9) <= '1';
                    cLUT_index(10) <= '0';
                elsif ((ap_const_boolean_1 = ap_condition_1427)) then 
                    cLUT_index(8) <= '1';
                    cLUT_index(9) <= '1';
                    cLUT_index(10) <= '0';
                elsif ((ap_const_boolean_1 = ap_condition_1424)) then 
                    cLUT_index(8) <= '1';
                    cLUT_index(9) <= '0';
                    cLUT_index(10) <= '1';
                elsif ((ap_const_boolean_1 = ap_condition_1421)) then 
                    cLUT_index(8) <= '1';
                    cLUT_index(9) <= '1';
                    cLUT_index(10) <= '1';
                end if;
            end if; 
        end if;
    end process;

    cStubCounter_0_i159_reg_509_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln240_reg_2136 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                cStubCounter_0_i159_reg_509 <= cStubCounter_reg_2131;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln240_reg_2136 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                cStubCounter_0_i159_reg_509 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    do_init_reg_493_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln240_reg_2136 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                do_init_reg_493 <= ap_const_lv1_0;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln240_reg_2136 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                do_init_reg_493 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    hLinkWord_V174_phi_reg_668_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_385)) then
                if ((do_init_reg_493 = ap_const_lv1_0)) then 
                    hLinkWord_V174_phi_reg_668 <= ap_phi_mux_hLinkWord_V174_rewind_phi_fu_597_p6;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    hLinkWord_V174_phi_reg_668 <= ap_phi_reg_pp0_iter1_hLinkWord_V174_phi_reg_668;
                end if;
            end if; 
        end if;
    end process;

    hNStubs_V_0_0157_reg_694_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln240_reg_2136_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
                hNStubs_V_0_0157_reg_694 <= ap_phi_mux_hNStubs_V_0_2_phi_fu_712_p6;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln240_reg_2136_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                hNStubs_V_0_0157_reg_694 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    hNStubs_V_1_0158_reg_680_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln240_reg_2136_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
                hNStubs_V_1_0158_reg_680 <= ap_phi_mux_hNStubs_V_1_2_phi_fu_727_p6;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln240_reg_2136_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                hNStubs_V_1_0158_reg_680 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    p_phi_reg_643_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_385)) then
                if ((do_init_reg_493 = ap_const_lv1_0)) then 
                    p_phi_reg_643 <= ap_phi_mux_p_rewind_phi_fu_569_p6;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    p_phi_reg_643 <= ap_phi_reg_pp0_iter1_p_phi_reg_643;
                end if;
            end if; 
        end if;
    end process;

    xor_ln212_1_phi_reg_619_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_385)) then
                if ((do_init_reg_493 = ap_const_lv1_0)) then 
                    xor_ln212_1_phi_reg_619 <= ap_phi_mux_xor_ln212_1_rewind_phi_fu_541_p6;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    xor_ln212_1_phi_reg_619 <= ap_phi_reg_pp0_iter1_xor_ln212_1_phi_reg_619;
                end if;
            end if; 
        end if;
    end process;

    xor_ln212_2_phi_reg_607_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_385)) then
                if ((do_init_reg_493 = ap_const_lv1_0)) then 
                    xor_ln212_2_phi_reg_607 <= ap_phi_mux_xor_ln212_2_rewind_phi_fu_527_p6;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    xor_ln212_2_phi_reg_607 <= ap_phi_reg_pp0_iter1_xor_ln212_2_phi_reg_607;
                end if;
            end if; 
        end if;
    end process;

    xor_ln212_phi_reg_631_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_385)) then
                if ((do_init_reg_493 = ap_const_lv1_0)) then 
                    xor_ln212_phi_reg_631 <= ap_phi_mux_xor_ln212_rewind_phi_fu_555_p6;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    xor_ln212_phi_reg_631 <= ap_phi_reg_pp0_iter1_xor_ln212_phi_reg_631;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_fu_796_p2 = ap_const_lv1_0) and (trunc_ln647_fu_801_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    Hi_reg_2154(3 downto 2) <= Hi_fu_813_p3(3 downto 2);
                icmp_ln879_1_reg_2159 <= icmp_ln879_1_fu_931_p2;
                p_Result_4_reg_2148 <= hStub_V_reg_2115(2 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                    Hi_reg_2154_pp0_iter2_reg(3 downto 2) <= Hi_reg_2154(3 downto 2);
                    Hi_reg_2154_pp0_iter3_reg(3 downto 2) <= Hi_reg_2154_pp0_iter2_reg(3 downto 2);
                bx_V173_phi_reg_655_pp0_iter2_reg <= bx_V173_phi_reg_655;
                bx_V173_phi_reg_655_pp0_iter3_reg <= bx_V173_phi_reg_655_pp0_iter2_reg;
                hLinkWord_V174_phi_reg_668_pp0_iter2_reg <= hLinkWord_V174_phi_reg_668;
                hLinkWord_V174_phi_reg_668_pp0_iter3_reg <= hLinkWord_V174_phi_reg_668_pp0_iter2_reg;
                hStub_V_reg_2115_pp0_iter2_reg <= hStub_V_reg_2115_pp0_iter1_reg;
                hStub_V_reg_2115_pp0_iter3_reg <= hStub_V_reg_2115_pp0_iter2_reg;
                icmp_ln240_reg_2136_pp0_iter2_reg <= icmp_ln240_reg_2136_pp0_iter1_reg;
                icmp_ln240_reg_2136_pp0_iter3_reg <= icmp_ln240_reg_2136_pp0_iter2_reg;
                icmp_ln240_reg_2136_pp0_iter4_reg <= icmp_ln240_reg_2136_pp0_iter3_reg;
                icmp_ln879_1_reg_2159_pp0_iter2_reg <= icmp_ln879_1_reg_2159;
                icmp_ln879_1_reg_2159_pp0_iter3_reg <= icmp_ln879_1_reg_2159_pp0_iter2_reg;
                icmp_ln879_reg_2140_pp0_iter2_reg <= icmp_ln879_reg_2140;
                icmp_ln879_reg_2140_pp0_iter3_reg <= icmp_ln879_reg_2140_pp0_iter2_reg;
                icmp_ln879_reg_2140_pp0_iter4_reg <= icmp_ln879_reg_2140_pp0_iter3_reg;
                p_Result_4_reg_2148_pp0_iter2_reg <= p_Result_4_reg_2148;
                p_Result_4_reg_2148_pp0_iter3_reg <= p_Result_4_reg_2148_pp0_iter2_reg;
                p_phi_reg_643_pp0_iter2_reg <= p_phi_reg_643;
                p_phi_reg_643_pp0_iter3_reg <= p_phi_reg_643_pp0_iter2_reg;
                trunc_ln647_reg_2144_pp0_iter2_reg <= trunc_ln647_reg_2144;
                trunc_ln647_reg_2144_pp0_iter3_reg <= trunc_ln647_reg_2144_pp0_iter2_reg;
                trunc_ln647_reg_2144_pp0_iter4_reg <= trunc_ln647_reg_2144_pp0_iter3_reg;
                xor_ln212_1_phi_reg_619_pp0_iter2_reg <= xor_ln212_1_phi_reg_619;
                xor_ln212_1_phi_reg_619_pp0_iter3_reg <= xor_ln212_1_phi_reg_619_pp0_iter2_reg;
                xor_ln212_2_phi_reg_607_pp0_iter2_reg <= xor_ln212_2_phi_reg_607;
                xor_ln212_2_phi_reg_607_pp0_iter3_reg <= xor_ln212_2_phi_reg_607_pp0_iter2_reg;
                xor_ln212_phi_reg_631_pp0_iter2_reg <= xor_ln212_phi_reg_631;
                xor_ln212_phi_reg_631_pp0_iter3_reg <= xor_ln212_phi_reg_631_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln240_reg_2136_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                bx_V173_rewind_reg_579 <= bx_V173_phi_reg_655;
                hLinkWord_V174_rewind_reg_593 <= hLinkWord_V174_phi_reg_668;
                p_rewind_reg_565 <= p_phi_reg_643;
                xor_ln212_1_rewind_reg_537 <= xor_ln212_1_phi_reg_619;
                xor_ln212_2_rewind_reg_523 <= xor_ln212_2_phi_reg_607;
                xor_ln212_rewind_reg_551 <= xor_ln212_phi_reg_631;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (bx_o_V_1_vld_reg = ap_const_logic_0) and (bx_o_V_1_vld_in = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (ap_const_logic_1 = ap_const_logic_1) and (bx_o_V_1_vld_in = ap_const_logic_1) and (bx_o_V_1_vld_reg = ap_const_logic_1)))) then
                bx_o_V_1_data_reg <= bx_V173_phi_reg_655_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                cStubCounter_reg_2131 <= cStubCounter_fu_784_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_reg_2140_pp0_iter3_reg = ap_const_lv1_0) and (trunc_ln647_reg_2144_pp0_iter3_reg = ap_const_lv1_1))) then
                hAStub_data_V_reg_2342 <= hStub_V_reg_2115_pp0_iter3_reg(38 downto 3);
                trunc_ln321_reg_2355 <= trunc_ln321_fu_2037_p1;
                xor_ln338_reg_2348 <= xor_ln338_fu_2031_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                hStub_V_reg_2115 <= hInputStubs_V_dout;
                hStub_V_reg_2115_pp0_iter1_reg <= hStub_V_reg_2115;
                icmp_ln240_reg_2136 <= icmp_ln240_fu_790_p2;
                icmp_ln240_reg_2136_pp0_iter1_reg <= icmp_ln240_reg_2136;
                icmp_ln879_reg_2140 <= icmp_ln879_fu_796_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_reg_2140 = ap_const_lv1_0) and (trunc_ln647_reg_2144 = ap_const_lv1_1))) then
                icmp_ln131_11_reg_2262 <= icmp_ln131_11_fu_1357_p2;
                icmp_ln131_12_reg_2267 <= icmp_ln131_12_fu_1363_p2;
                icmp_ln131_13_reg_2277 <= icmp_ln131_13_fu_1406_p2;
                icmp_ln131_14_reg_2282 <= icmp_ln131_14_fu_1412_p2;
                icmp_ln131_15_reg_2292 <= icmp_ln131_15_fu_1445_p2;
                icmp_ln131_16_reg_2297 <= icmp_ln131_16_fu_1451_p2;
                icmp_ln131_17_reg_2307 <= icmp_ln131_17_fu_1484_p2;
                icmp_ln131_18_reg_2312 <= icmp_ln131_18_fu_1490_p2;
                icmp_ln131_19_reg_2322 <= icmp_ln131_19_fu_1523_p2;
                icmp_ln131_1_reg_2187 <= icmp_ln131_1_fu_1096_p2;
                icmp_ln131_2_reg_2192 <= icmp_ln131_2_fu_1102_p2;
                icmp_ln131_3_reg_2202 <= icmp_ln131_3_fu_1145_p2;
                icmp_ln131_4_reg_2207 <= icmp_ln131_4_fu_1151_p2;
                icmp_ln131_5_reg_2217 <= icmp_ln131_5_fu_1184_p2;
                icmp_ln131_6_reg_2222 <= icmp_ln131_6_fu_1190_p2;
                icmp_ln131_7_reg_2232 <= icmp_ln131_7_fu_1223_p2;
                icmp_ln131_8_reg_2237 <= icmp_ln131_8_fu_1229_p2;
                icmp_ln131_9_reg_2247 <= icmp_ln131_9_fu_1262_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_reg_2140_pp0_iter2_reg = ap_const_lv1_0) and (trunc_ln647_reg_2144_pp0_iter2_reg = ap_const_lv1_1))) then
                select_ln131_14_reg_2332 <= select_ln131_14_fu_1608_p3;
                select_ln131_29_reg_2337 <= select_ln131_29_fu_1675_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_fu_796_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                trunc_ln647_reg_2144 <= trunc_ln647_fu_801_p1;
            end if;
        end if;
    end process;
    cLUT_index(7 downto 0) <= "00000000";
    cLUT_index(12 downto 11) <= "00";
    Hi_reg_2154(1 downto 0) <= "00";
    Hi_reg_2154_pp0_iter2_reg(1 downto 0) <= "00";
    Hi_reg_2154_pp0_iter3_reg(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_reset_idle_pp0 = ap_const_logic_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    Hi_1_fu_821_p2 <= (ap_const_lv4_3 or Hi_fu_813_p3);
    Hi_fu_813_p3 <= (p_Result_4_fu_804_p4 & ap_const_lv2_0);
    Lo_fu_827_p2 <= (ap_const_lv4_1 or Hi_fu_813_p3);
    add_ln131_10_fu_1496_p2 <= std_logic_vector(unsigned(zext_ln131_5_fu_1318_p1) + unsigned(ap_const_lv12_B00));
    add_ln131_11_fu_1529_p2 <= std_logic_vector(unsigned(zext_ln131_5_fu_1318_p1) + unsigned(ap_const_lv12_900));
    add_ln131_1_fu_1108_p2 <= std_logic_vector(unsigned(zext_ln131_2_fu_1057_p1) + unsigned(ap_const_lv12_F00));
    add_ln131_2_fu_1157_p2 <= std_logic_vector(unsigned(zext_ln131_2_fu_1057_p1) + unsigned(ap_const_lv12_E00));
    add_ln131_3_fu_1196_p2 <= std_logic_vector(unsigned(zext_ln131_2_fu_1057_p1) + unsigned(ap_const_lv12_D00));
    add_ln131_4_fu_1235_p2 <= std_logic_vector(unsigned(zext_ln131_2_fu_1057_p1) + unsigned(ap_const_lv12_B00));
    add_ln131_5_fu_1268_p2 <= std_logic_vector(unsigned(zext_ln131_2_fu_1057_p1) + unsigned(ap_const_lv12_900));
    add_ln131_6_fu_1308_p2 <= std_logic_vector(unsigned(trunc_ln113_fu_1007_p1) + unsigned(zext_ln131_4_fu_1304_p1));
    add_ln131_7_fu_1369_p2 <= std_logic_vector(unsigned(zext_ln131_5_fu_1318_p1) + unsigned(ap_const_lv12_F00));
    add_ln131_8_fu_1418_p2 <= std_logic_vector(unsigned(zext_ln131_5_fu_1318_p1) + unsigned(ap_const_lv12_E00));
    add_ln131_9_fu_1457_p2 <= std_logic_vector(unsigned(zext_ln131_5_fu_1318_p1) + unsigned(ap_const_lv12_D00));
    add_ln131_fu_1047_p2 <= std_logic_vector(unsigned(trunc_ln113_fu_1007_p1) + unsigned(zext_ln131_fu_1043_p1));
    and_ln131_1_fu_1556_p2 <= (icmp_ln131_4_reg_2207 and icmp_ln131_3_reg_2202);
    and_ln131_2_fu_1564_p2 <= (icmp_ln131_6_reg_2222 and icmp_ln131_5_reg_2217);
    and_ln131_3_fu_1568_p2 <= (icmp_ln131_8_reg_2237 and icmp_ln131_7_reg_2232);
    and_ln131_4_fu_1615_p2 <= (icmp_ln131_12_reg_2267 and icmp_ln131_11_reg_2262);
    and_ln131_5_fu_1623_p2 <= (icmp_ln131_14_reg_2282 and icmp_ln131_13_reg_2277);
    and_ln131_6_fu_1631_p2 <= (icmp_ln131_16_reg_2297 and icmp_ln131_15_reg_2292);
    and_ln131_7_fu_1635_p2 <= (icmp_ln131_18_reg_2312 and icmp_ln131_17_reg_2307);
    and_ln131_fu_1548_p2 <= (icmp_ln131_2_reg_2192 and icmp_ln131_1_reg_2187);
    and_ln212_1_fu_1712_p2 <= (xor_ln212_1_phi_reg_619_pp0_iter3_reg and tmp_7_fu_1705_p3);
    and_ln212_2_fu_1723_p2 <= (xor_ln212_2_phi_reg_607_pp0_iter3_reg and icmp_ln887_fu_1718_p2);
    and_ln212_fu_1699_p2 <= (xor_ln212_phi_reg_631_pp0_iter3_reg and icmp_ln212_fu_1694_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, hInputStubs_V_empty_n, bx_o_V_1_ack_in, ap_enable_reg_pp0_iter5)
    begin
                ap_block_pp0_stage0_01001 <= (((bx_o_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((hInputStubs_V_empty_n = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, hInputStubs_V_empty_n, bx_o_V_1_ack_in, ap_enable_reg_pp0_iter5)
    begin
                ap_block_pp0_stage0_11001 <= (((bx_o_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((hInputStubs_V_empty_n = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, hInputStubs_V_empty_n, bx_o_V_1_ack_in, ap_enable_reg_pp0_iter5)
    begin
                ap_block_pp0_stage0_subdone <= (((bx_o_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((hInputStubs_V_empty_n = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_state2_pp0_stage0_iter0_assign_proc : process(hInputStubs_V_empty_n)
    begin
                ap_block_state2_pp0_stage0_iter0 <= (hInputStubs_V_empty_n = ap_const_logic_0);
    end process;

        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage0_iter5_assign_proc : process(bx_o_V_1_ack_in)
    begin
                ap_block_state7_pp0_stage0_iter5 <= (bx_o_V_1_ack_in = ap_const_logic_0);
    end process;


    ap_condition_1185_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln879_fu_796_p2, trunc_ln647_fu_801_p1, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_1185 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_fu_796_p2 = ap_const_lv1_0) and (trunc_ln647_fu_801_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_1421_assign_proc : process(icmp_ln879_1_fu_931_p2, icmp_ln879_2_fu_937_p2, icmp_ln879_3_fu_943_p2, icmp_ln879_4_fu_949_p2, icmp_ln879_5_fu_955_p2, icmp_ln879_6_fu_961_p2)
    begin
                ap_condition_1421 <= ((icmp_ln879_5_fu_955_p2 = ap_const_lv1_0) and (icmp_ln879_4_fu_949_p2 = ap_const_lv1_0) and (icmp_ln879_3_fu_943_p2 = ap_const_lv1_0) and (icmp_ln879_2_fu_937_p2 = ap_const_lv1_0) and (icmp_ln879_1_fu_931_p2 = ap_const_lv1_0) and (icmp_ln879_6_fu_961_p2 = ap_const_lv1_1));
    end process;


    ap_condition_1424_assign_proc : process(icmp_ln879_1_fu_931_p2, icmp_ln879_2_fu_937_p2, icmp_ln879_3_fu_943_p2, icmp_ln879_4_fu_949_p2, icmp_ln879_5_fu_955_p2)
    begin
                ap_condition_1424 <= ((icmp_ln879_4_fu_949_p2 = ap_const_lv1_0) and (icmp_ln879_3_fu_943_p2 = ap_const_lv1_0) and (icmp_ln879_2_fu_937_p2 = ap_const_lv1_0) and (icmp_ln879_1_fu_931_p2 = ap_const_lv1_0) and (icmp_ln879_5_fu_955_p2 = ap_const_lv1_1));
    end process;


    ap_condition_1427_assign_proc : process(icmp_ln879_1_fu_931_p2, icmp_ln879_2_fu_937_p2, icmp_ln879_3_fu_943_p2, icmp_ln879_4_fu_949_p2)
    begin
                ap_condition_1427 <= ((icmp_ln879_3_fu_943_p2 = ap_const_lv1_0) and (icmp_ln879_2_fu_937_p2 = ap_const_lv1_0) and (icmp_ln879_1_fu_931_p2 = ap_const_lv1_0) and (icmp_ln879_4_fu_949_p2 = ap_const_lv1_1));
    end process;


    ap_condition_1430_assign_proc : process(icmp_ln879_1_fu_931_p2, icmp_ln879_2_fu_937_p2, icmp_ln879_3_fu_943_p2)
    begin
                ap_condition_1430 <= ((icmp_ln879_2_fu_937_p2 = ap_const_lv1_0) and (icmp_ln879_1_fu_931_p2 = ap_const_lv1_0) and (icmp_ln879_3_fu_943_p2 = ap_const_lv1_1));
    end process;


    ap_condition_385_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_385 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_388_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_388 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_56_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_56 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001, icmp_ln240_reg_2136_pp0_iter4_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln240_reg_2136_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_bx_V173_rewind_phi_fu_583_p6_assign_proc : process(ap_block_pp0_stage0, bx_V173_rewind_reg_579, bx_V173_phi_reg_655, icmp_ln240_reg_2136_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln240_reg_2136_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_bx_V173_rewind_phi_fu_583_p6 <= bx_V173_phi_reg_655;
        else 
            ap_phi_mux_bx_V173_rewind_phi_fu_583_p6 <= bx_V173_rewind_reg_579;
        end if; 
    end process;


    ap_phi_mux_cStubCounter_0_i159_phi_fu_513_p6_assign_proc : process(cStubCounter_0_i159_reg_509, cStubCounter_reg_2131, icmp_ln240_reg_2136, ap_condition_388)
    begin
        if ((ap_const_boolean_1 = ap_condition_388)) then
            if ((icmp_ln240_reg_2136 = ap_const_lv1_1)) then 
                ap_phi_mux_cStubCounter_0_i159_phi_fu_513_p6 <= ap_const_lv7_0;
            elsif ((icmp_ln240_reg_2136 = ap_const_lv1_0)) then 
                ap_phi_mux_cStubCounter_0_i159_phi_fu_513_p6 <= cStubCounter_reg_2131;
            else 
                ap_phi_mux_cStubCounter_0_i159_phi_fu_513_p6 <= cStubCounter_0_i159_reg_509;
            end if;
        else 
            ap_phi_mux_cStubCounter_0_i159_phi_fu_513_p6 <= cStubCounter_0_i159_reg_509;
        end if; 
    end process;


    ap_phi_mux_do_init_phi_fu_497_p6_assign_proc : process(do_init_reg_493, icmp_ln240_reg_2136, ap_condition_388)
    begin
        if ((ap_const_boolean_1 = ap_condition_388)) then
            if ((icmp_ln240_reg_2136 = ap_const_lv1_1)) then 
                ap_phi_mux_do_init_phi_fu_497_p6 <= ap_const_lv1_1;
            elsif ((icmp_ln240_reg_2136 = ap_const_lv1_0)) then 
                ap_phi_mux_do_init_phi_fu_497_p6 <= ap_const_lv1_0;
            else 
                ap_phi_mux_do_init_phi_fu_497_p6 <= do_init_reg_493;
            end if;
        else 
            ap_phi_mux_do_init_phi_fu_497_p6 <= do_init_reg_493;
        end if; 
    end process;


    ap_phi_mux_hLinkWord_V174_phi_phi_fu_672_p4_assign_proc : process(do_init_reg_493, ap_phi_mux_hLinkWord_V174_rewind_phi_fu_597_p6, ap_phi_reg_pp0_iter1_hLinkWord_V174_phi_reg_668)
    begin
        if ((do_init_reg_493 = ap_const_lv1_0)) then 
            ap_phi_mux_hLinkWord_V174_phi_phi_fu_672_p4 <= ap_phi_mux_hLinkWord_V174_rewind_phi_fu_597_p6;
        else 
            ap_phi_mux_hLinkWord_V174_phi_phi_fu_672_p4 <= ap_phi_reg_pp0_iter1_hLinkWord_V174_phi_reg_668;
        end if; 
    end process;


    ap_phi_mux_hLinkWord_V174_rewind_phi_fu_597_p6_assign_proc : process(ap_block_pp0_stage0, hLinkWord_V174_rewind_reg_593, hLinkWord_V174_phi_reg_668, icmp_ln240_reg_2136_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln240_reg_2136_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_hLinkWord_V174_rewind_phi_fu_597_p6 <= hLinkWord_V174_phi_reg_668;
        else 
            ap_phi_mux_hLinkWord_V174_rewind_phi_fu_597_p6 <= hLinkWord_V174_rewind_reg_593;
        end if; 
    end process;


    ap_phi_mux_hNStubs_V_0_2_phi_fu_712_p6_assign_proc : process(hNStubs_V_0_0157_reg_694, icmp_ln879_reg_2140_pp0_iter4_reg, trunc_ln647_reg_2144_pp0_iter4_reg, ap_phi_reg_pp0_iter5_hNStubs_V_0_2_reg_708, hNStubs_1_V_1_fu_2054_p3)
    begin
        if (((icmp_ln879_reg_2140_pp0_iter4_reg = ap_const_lv1_0) and (trunc_ln647_reg_2144_pp0_iter4_reg = ap_const_lv1_1))) then 
            ap_phi_mux_hNStubs_V_0_2_phi_fu_712_p6 <= hNStubs_1_V_1_fu_2054_p3;
        elsif (((icmp_ln879_reg_2140_pp0_iter4_reg = ap_const_lv1_1) or ((trunc_ln647_reg_2144_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln879_reg_2140_pp0_iter4_reg = ap_const_lv1_0)))) then 
            ap_phi_mux_hNStubs_V_0_2_phi_fu_712_p6 <= hNStubs_V_0_0157_reg_694;
        else 
            ap_phi_mux_hNStubs_V_0_2_phi_fu_712_p6 <= ap_phi_reg_pp0_iter5_hNStubs_V_0_2_reg_708;
        end if; 
    end process;


    ap_phi_mux_hNStubs_V_1_2_phi_fu_727_p6_assign_proc : process(hNStubs_V_1_0158_reg_680, icmp_ln879_reg_2140_pp0_iter4_reg, trunc_ln647_reg_2144_pp0_iter4_reg, ap_phi_reg_pp0_iter5_hNStubs_V_1_2_reg_723, hNStubs_1_V_2_fu_2062_p3)
    begin
        if (((icmp_ln879_reg_2140_pp0_iter4_reg = ap_const_lv1_0) and (trunc_ln647_reg_2144_pp0_iter4_reg = ap_const_lv1_1))) then 
            ap_phi_mux_hNStubs_V_1_2_phi_fu_727_p6 <= hNStubs_1_V_2_fu_2062_p3;
        elsif (((icmp_ln879_reg_2140_pp0_iter4_reg = ap_const_lv1_1) or ((trunc_ln647_reg_2144_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln879_reg_2140_pp0_iter4_reg = ap_const_lv1_0)))) then 
            ap_phi_mux_hNStubs_V_1_2_phi_fu_727_p6 <= hNStubs_V_1_0158_reg_680;
        else 
            ap_phi_mux_hNStubs_V_1_2_phi_fu_727_p6 <= ap_phi_reg_pp0_iter5_hNStubs_V_1_2_reg_723;
        end if; 
    end process;


    ap_phi_mux_p_rewind_phi_fu_569_p6_assign_proc : process(ap_block_pp0_stage0, p_rewind_reg_565, p_phi_reg_643, icmp_ln240_reg_2136_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln240_reg_2136_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_p_rewind_phi_fu_569_p6 <= p_phi_reg_643;
        else 
            ap_phi_mux_p_rewind_phi_fu_569_p6 <= p_rewind_reg_565;
        end if; 
    end process;


    ap_phi_mux_xor_ln212_1_rewind_phi_fu_541_p6_assign_proc : process(ap_block_pp0_stage0, xor_ln212_1_rewind_reg_537, xor_ln212_1_phi_reg_619, icmp_ln240_reg_2136_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln240_reg_2136_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_xor_ln212_1_rewind_phi_fu_541_p6 <= xor_ln212_1_phi_reg_619;
        else 
            ap_phi_mux_xor_ln212_1_rewind_phi_fu_541_p6 <= xor_ln212_1_rewind_reg_537;
        end if; 
    end process;


    ap_phi_mux_xor_ln212_2_rewind_phi_fu_527_p6_assign_proc : process(ap_block_pp0_stage0, xor_ln212_2_rewind_reg_523, xor_ln212_2_phi_reg_607, icmp_ln240_reg_2136_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln240_reg_2136_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_xor_ln212_2_rewind_phi_fu_527_p6 <= xor_ln212_2_phi_reg_607;
        else 
            ap_phi_mux_xor_ln212_2_rewind_phi_fu_527_p6 <= xor_ln212_2_rewind_reg_523;
        end if; 
    end process;


    ap_phi_mux_xor_ln212_rewind_phi_fu_555_p6_assign_proc : process(ap_block_pp0_stage0, xor_ln212_rewind_reg_551, xor_ln212_phi_reg_631, icmp_ln240_reg_2136_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln240_reg_2136_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_xor_ln212_rewind_phi_fu_555_p6 <= xor_ln212_phi_reg_631;
        else 
            ap_phi_mux_xor_ln212_rewind_phi_fu_555_p6 <= xor_ln212_rewind_reg_551;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_bx_V173_phi_reg_655 <= "XXX";
    ap_phi_reg_pp0_iter0_hLinkWord_V174_phi_reg_668 <= "XXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_phi_reg_643 <= "X";
    ap_phi_reg_pp0_iter0_xor_ln212_1_phi_reg_619 <= "X";
    ap_phi_reg_pp0_iter0_xor_ln212_2_phi_reg_607 <= "X";
    ap_phi_reg_pp0_iter0_xor_ln212_phi_reg_631 <= "X";
    ap_phi_reg_pp0_iter5_hNStubs_V_0_2_reg_708 <= "XXXXXXX";
    ap_phi_reg_pp0_iter5_hNStubs_V_1_2_reg_723 <= "XXXXXXX";

    ap_ready_assign_proc : process(ap_start, icmp_ln240_fu_790_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln240_fu_790_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to4)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to4 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    bx_o_V <= bx_o_V_1_data_reg;

    bx_o_V_1_ack_in_assign_proc : process(bx_o_V_1_vld_reg)
    begin
        if (((bx_o_V_1_vld_reg = ap_const_logic_0) or ((ap_const_logic_1 = ap_const_logic_1) and (bx_o_V_1_vld_reg = ap_const_logic_1)))) then 
            bx_o_V_1_ack_in <= ap_const_logic_1;
        else 
            bx_o_V_1_ack_in <= ap_const_logic_0;
        end if; 
    end process;


    bx_o_V_1_vld_in_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln240_reg_2136_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln240_reg_2136_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            bx_o_V_1_vld_in <= ap_const_logic_1;
        else 
            bx_o_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    bx_o_V_ap_vld <= bx_o_V_1_vld_reg;
    cStubCounter_fu_784_p2 <= std_logic_vector(unsigned(ap_phi_mux_cStubCounter_0_i159_phi_fu_513_p6) + unsigned(ap_const_lv7_1));
    hBend_V_1_fu_1287_p4 <= hStub_V_reg_2115_pp0_iter1_reg(5 downto 3);
    hBend_V_fu_1011_p4 <= hStub_V_reg_2115_pp0_iter1_reg(6 downto 3);
    hEntries_V_fu_2041_p3 <= 
        hNStubs_V_1_0158_reg_680 when (xor_ln338_reg_2348(0) = '1') else 
        hNStubs_V_0_0157_reg_694;

    hInputStubs_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, hInputStubs_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            hInputStubs_V_blk_n <= hInputStubs_V_empty_n;
        else 
            hInputStubs_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    hInputStubs_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            hInputStubs_V_read <= ap_const_logic_1;
        else 
            hInputStubs_V_read <= ap_const_logic_0;
        end if; 
    end process;

    hNStubs_0_V_fu_2048_p2 <= std_logic_vector(unsigned(hEntries_V_fu_2041_p3) + unsigned(ap_const_lv7_1));
    hNStubs_1_V_1_fu_2054_p3 <= 
        hNStubs_V_0_0157_reg_694 when (xor_ln338_reg_2348(0) = '1') else 
        hNStubs_0_V_fu_2048_p2;
    hNStubs_1_V_2_fu_2062_p3 <= 
        hNStubs_0_V_fu_2048_p2 when (xor_ln338_reg_2348(0) = '1') else 
        hNStubs_V_1_0158_reg_680;
    hOutputStubs_0_dataarray_data_V_address0 <= zext_ln321_fu_2077_p1(8 - 1 downto 0);

    hOutputStubs_0_dataarray_data_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            hOutputStubs_0_dataarray_data_V_ce0 <= ap_const_logic_1;
        else 
            hOutputStubs_0_dataarray_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    hOutputStubs_0_dataarray_data_V_d0 <= hAStub_data_V_reg_2342;

    hOutputStubs_0_dataarray_data_V_we0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001, icmp_ln879_reg_2140_pp0_iter4_reg, trunc_ln647_reg_2144_pp0_iter4_reg, xor_ln338_reg_2348)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (xor_ln338_reg_2348 = ap_const_lv1_0) and (icmp_ln879_reg_2140_pp0_iter4_reg = ap_const_lv1_0) and (trunc_ln647_reg_2144_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            hOutputStubs_0_dataarray_data_V_we0 <= ap_const_logic_1;
        else 
            hOutputStubs_0_dataarray_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    hOutputStubs_1_dataarray_data_V_address0 <= zext_ln321_fu_2077_p1(8 - 1 downto 0);

    hOutputStubs_1_dataarray_data_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            hOutputStubs_1_dataarray_data_V_ce0 <= ap_const_logic_1;
        else 
            hOutputStubs_1_dataarray_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    hOutputStubs_1_dataarray_data_V_d0 <= hAStub_data_V_reg_2342;

    hOutputStubs_1_dataarray_data_V_we0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001, icmp_ln879_reg_2140_pp0_iter4_reg, trunc_ln647_reg_2144_pp0_iter4_reg, xor_ln338_reg_2348)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_reg_2140_pp0_iter4_reg = ap_const_lv1_0) and (xor_ln338_reg_2348 = ap_const_lv1_1) and (trunc_ln647_reg_2144_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            hOutputStubs_1_dataarray_data_V_we0 <= ap_const_logic_1;
        else 
            hOutputStubs_1_dataarray_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    hPhiCorr_V_1_fu_1771_p3 <= 
        ap_const_lv32_0 when (tmp_14_fu_1763_p3(0) = '1') else 
        sext_ln1354_fu_1759_p1;
    hPhiCorr_V_3_fu_1889_p3 <= 
        ap_const_lv32_0 when (tmp_22_fu_1881_p3(0) = '1') else 
        sext_ln1354_1_fu_1877_p1;
    icmp_ln131_10_fu_1332_p2 <= "0" when (tmp_18_fu_1322_p4 = ap_const_lv5_0) else "1";
    icmp_ln131_11_fu_1357_p2 <= "0" when (tmp_19_fu_1347_p4 = ap_const_lv3_0) else "1";
    icmp_ln131_12_fu_1363_p2 <= "1" when (unsigned(add_ln131_6_fu_1308_p2) < unsigned(ap_const_lv11_140)) else "0";
    icmp_ln131_13_fu_1406_p2 <= "0" when (tmp_20_fu_1396_p4 = ap_const_lv2_0) else "1";
    icmp_ln131_14_fu_1412_p2 <= "1" when (unsigned(add_ln131_6_fu_1308_p2) < unsigned(ap_const_lv11_240)) else "0";
    icmp_ln131_15_fu_1445_p2 <= "1" when (unsigned(add_ln131_6_fu_1308_p2) > unsigned(ap_const_lv11_2FF)) else "0";
    icmp_ln131_16_fu_1451_p2 <= "1" when (unsigned(add_ln131_6_fu_1308_p2) < unsigned(ap_const_lv11_380)) else "0";
    icmp_ln131_17_fu_1484_p2 <= "1" when (unsigned(add_ln131_6_fu_1308_p2) > unsigned(ap_const_lv11_4FF)) else "0";
    icmp_ln131_18_fu_1490_p2 <= "1" when (unsigned(add_ln131_6_fu_1308_p2) < unsigned(ap_const_lv11_580)) else "0";
    icmp_ln131_19_fu_1523_p2 <= "1" when (unsigned(add_ln131_6_fu_1308_p2) > unsigned(ap_const_lv11_6FF)) else "0";
    icmp_ln131_1_fu_1096_p2 <= "0" when (tmp_11_fu_1086_p4 = ap_const_lv3_0) else "1";
    icmp_ln131_2_fu_1102_p2 <= "1" when (unsigned(add_ln131_fu_1047_p2) < unsigned(ap_const_lv11_140)) else "0";
    icmp_ln131_3_fu_1145_p2 <= "0" when (tmp_12_fu_1135_p4 = ap_const_lv2_0) else "1";
    icmp_ln131_4_fu_1151_p2 <= "1" when (unsigned(add_ln131_fu_1047_p2) < unsigned(ap_const_lv11_240)) else "0";
    icmp_ln131_5_fu_1184_p2 <= "1" when (unsigned(add_ln131_fu_1047_p2) > unsigned(ap_const_lv11_2FF)) else "0";
    icmp_ln131_6_fu_1190_p2 <= "1" when (unsigned(add_ln131_fu_1047_p2) < unsigned(ap_const_lv11_380)) else "0";
    icmp_ln131_7_fu_1223_p2 <= "1" when (unsigned(add_ln131_fu_1047_p2) > unsigned(ap_const_lv11_4FF)) else "0";
    icmp_ln131_8_fu_1229_p2 <= "1" when (unsigned(add_ln131_fu_1047_p2) < unsigned(ap_const_lv11_580)) else "0";
    icmp_ln131_9_fu_1262_p2 <= "1" when (unsigned(add_ln131_fu_1047_p2) > unsigned(ap_const_lv11_6FF)) else "0";
    icmp_ln131_fu_1071_p2 <= "0" when (tmp_10_fu_1061_p4 = ap_const_lv5_0) else "1";
    icmp_ln212_fu_1694_p2 <= "0" when (p_Result_4_reg_2148_pp0_iter3_reg = ap_const_lv2_0) else "1";
    icmp_ln240_fu_790_p2 <= "1" when (ap_phi_mux_cStubCounter_0_i159_phi_fu_513_p6 = ap_const_lv7_6B) else "0";
    icmp_ln647_fu_833_p2 <= "1" when (unsigned(Lo_fu_827_p2) > unsigned(Hi_1_fu_821_p2)) else "0";
    icmp_ln879_1_fu_931_p2 <= "1" when (p_Result_2_fu_925_p2 = ap_const_lv20_1) else "0";
    icmp_ln879_2_fu_937_p2 <= "1" when (p_Result_2_fu_925_p2 = ap_const_lv20_2) else "0";
    icmp_ln879_3_fu_943_p2 <= "1" when (p_Result_2_fu_925_p2 = ap_const_lv20_3) else "0";
    icmp_ln879_4_fu_949_p2 <= "1" when (p_Result_2_fu_925_p2 = ap_const_lv20_4) else "0";
    icmp_ln879_5_fu_955_p2 <= "1" when (p_Result_2_fu_925_p2 = ap_const_lv20_5) else "0";
    icmp_ln879_6_fu_961_p2 <= "1" when (p_Result_2_fu_925_p2 = ap_const_lv20_6) else "0";
    icmp_ln879_fu_796_p2 <= "1" when (hStub_V_reg_2115 = ap_const_lv39_0) else "0";
    icmp_ln887_fu_1718_p2 <= "1" when (p_Result_4_reg_2148_pp0_iter3_reg = ap_const_lv2_3) else "0";
    icmp_ln891_1_fu_1911_p2 <= "0" when (tmp_23_fu_1901_p4 = ap_const_lv18_0) else "1";
    icmp_ln891_fu_1793_p2 <= "0" when (tmp_15_fu_1783_p4 = ap_const_lv15_0) else "1";
    kPhiCorrtable_L1_address0 <= select_ln131_fu_1077_p3(6 - 1 downto 0);
    kPhiCorrtable_L1_address1 <= select_ln131_15_fu_1338_p3(6 - 1 downto 0);

    kPhiCorrtable_L1_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            kPhiCorrtable_L1_ce0 <= ap_const_logic_1;
        else 
            kPhiCorrtable_L1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kPhiCorrtable_L1_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            kPhiCorrtable_L1_ce1 <= ap_const_logic_1;
        else 
            kPhiCorrtable_L1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    kPhiCorrtable_L2_address0 <= sext_ln131_fu_1130_p1(6 - 1 downto 0);
    kPhiCorrtable_L2_address1 <= sext_ln131_8_fu_1391_p1(6 - 1 downto 0);

    kPhiCorrtable_L2_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            kPhiCorrtable_L2_ce0 <= ap_const_logic_1;
        else 
            kPhiCorrtable_L2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kPhiCorrtable_L2_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            kPhiCorrtable_L2_ce1 <= ap_const_logic_1;
        else 
            kPhiCorrtable_L2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    kPhiCorrtable_L3_address0 <= sext_ln131_2_fu_1179_p1(6 - 1 downto 0);
    kPhiCorrtable_L3_address1 <= sext_ln131_10_fu_1440_p1(6 - 1 downto 0);

    kPhiCorrtable_L3_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            kPhiCorrtable_L3_ce0 <= ap_const_logic_1;
        else 
            kPhiCorrtable_L3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kPhiCorrtable_L3_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            kPhiCorrtable_L3_ce1 <= ap_const_logic_1;
        else 
            kPhiCorrtable_L3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    kPhiCorrtable_L4_address0 <= sext_ln131_4_fu_1218_p1(7 - 1 downto 0);
    kPhiCorrtable_L4_address1 <= sext_ln131_12_fu_1479_p1(7 - 1 downto 0);

    kPhiCorrtable_L4_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            kPhiCorrtable_L4_ce0 <= ap_const_logic_1;
        else 
            kPhiCorrtable_L4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kPhiCorrtable_L4_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            kPhiCorrtable_L4_ce1 <= ap_const_logic_1;
        else 
            kPhiCorrtable_L4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    kPhiCorrtable_L5_address0 <= sext_ln131_5_fu_1257_p1(7 - 1 downto 0);
    kPhiCorrtable_L5_address1 <= sext_ln131_13_fu_1518_p1(7 - 1 downto 0);

    kPhiCorrtable_L5_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            kPhiCorrtable_L5_ce0 <= ap_const_logic_1;
        else 
            kPhiCorrtable_L5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kPhiCorrtable_L5_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            kPhiCorrtable_L5_ce1 <= ap_const_logic_1;
        else 
            kPhiCorrtable_L5_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    kPhiCorrtable_L6_address0 <= sext_ln131_6_fu_1282_p1(7 - 1 downto 0);
    kPhiCorrtable_L6_address1 <= sext_ln131_14_fu_1543_p1(7 - 1 downto 0);

    kPhiCorrtable_L6_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            kPhiCorrtable_L6_ce0 <= ap_const_logic_1;
        else 
            kPhiCorrtable_L6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kPhiCorrtable_L6_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            kPhiCorrtable_L6_ce1 <= ap_const_logic_1;
        else 
            kPhiCorrtable_L6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln647_1_fu_919_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv20_FFFFF),to_integer(unsigned('0' & zext_ln647_3_fu_909_p1(20-1 downto 0)))));
    lshr_ln647_fu_913_p2 <= std_logic_vector(shift_right(unsigned(select_ln647_2_fu_883_p3),to_integer(unsigned('0' & zext_ln647_2_fu_905_p1(20-1 downto 0)))));
    p_Result_1_fu_1967_p2 <= (select_ln681_3_fu_1960_p3 and select_ln681_2_fu_1953_p3);
    p_Result_2_fu_925_p2 <= (lshr_ln647_fu_913_p2 and lshr_ln647_1_fu_919_p2);
    p_Result_4_fu_804_p4 <= hStub_V_reg_2115(2 downto 1);
    p_Result_s_fu_1849_p2 <= (select_ln681_fu_1835_p3 and select_ln681_1_fu_1842_p3);
    p_Val2_2_fu_1799_p3 <= 
        ap_const_lv17_1FFFF when (icmp_ln891_fu_1793_p2(0) = '1') else 
        trunc_ln136_fu_1779_p1;
    p_Val2_4_fu_1917_p3 <= 
        ap_const_lv14_3FFF when (icmp_ln891_1_fu_1911_p2(0) = '1') else 
        trunc_ln136_1_fu_1897_p1;
    rbin_V_fu_1029_p2 <= (trunc_ln2_fu_1020_p4 xor ap_const_lv3_4);
    ret_V_8_fu_1871_p2 <= std_logic_vector(unsigned(zext_ln215_1_fu_1864_p1) - unsigned(sext_ln215_1_fu_1868_p1));
    ret_V_fu_1753_p2 <= std_logic_vector(unsigned(zext_ln215_fu_1746_p1) - unsigned(sext_ln215_fu_1750_p1));
    select_ln131_10_fu_1572_p3 <= 
        sext_ln131_1_fu_1552_p1 when (and_ln131_fu_1548_p2(0) = '1') else 
        kPhiCorrtable_L1_q0;
    select_ln131_11_fu_1580_p3 <= 
        sext_ln131_3_fu_1560_p1 when (and_ln131_1_fu_1556_p2(0) = '1') else 
        select_ln131_10_fu_1572_p3;
    select_ln131_12_fu_1592_p3 <= 
        kPhiCorrtable_L4_q0 when (and_ln131_2_fu_1564_p2(0) = '1') else 
        sext_ln131_7_fu_1588_p1;
    select_ln131_13_fu_1600_p3 <= 
        kPhiCorrtable_L5_q0 when (and_ln131_3_fu_1568_p2(0) = '1') else 
        select_ln131_12_fu_1592_p3;
    select_ln131_14_fu_1608_p3 <= 
        kPhiCorrtable_L6_q0 when (icmp_ln131_9_reg_2247(0) = '1') else 
        select_ln131_13_fu_1600_p3;
    select_ln131_15_fu_1338_p3 <= 
        ap_const_lv64_3F when (icmp_ln131_10_fu_1332_p2(0) = '1') else 
        zext_ln131_3_fu_1314_p1;
    select_ln131_16_fu_1375_p3 <= 
        add_ln131_7_fu_1369_p2 when (icmp_ln131_11_fu_1357_p2(0) = '1') else 
        ap_const_lv12_3F;
    select_ln131_17_fu_1383_p3 <= 
        select_ln131_16_fu_1375_p3 when (icmp_ln131_12_fu_1363_p2(0) = '1') else 
        ap_const_lv12_3F;
    select_ln131_18_fu_1424_p3 <= 
        add_ln131_8_fu_1418_p2 when (icmp_ln131_13_fu_1406_p2(0) = '1') else 
        ap_const_lv12_3F;
    select_ln131_19_fu_1432_p3 <= 
        select_ln131_18_fu_1424_p3 when (icmp_ln131_14_fu_1412_p2(0) = '1') else 
        ap_const_lv12_3F;
    select_ln131_1_fu_1114_p3 <= 
        add_ln131_1_fu_1108_p2 when (icmp_ln131_1_fu_1096_p2(0) = '1') else 
        ap_const_lv12_3F;
    select_ln131_20_fu_1463_p3 <= 
        add_ln131_9_fu_1457_p2 when (icmp_ln131_15_fu_1445_p2(0) = '1') else 
        ap_const_lv12_7F;
    select_ln131_21_fu_1471_p3 <= 
        select_ln131_20_fu_1463_p3 when (icmp_ln131_16_fu_1451_p2(0) = '1') else 
        ap_const_lv12_7F;
    select_ln131_22_fu_1502_p3 <= 
        add_ln131_10_fu_1496_p2 when (icmp_ln131_17_fu_1484_p2(0) = '1') else 
        ap_const_lv12_7F;
    select_ln131_23_fu_1510_p3 <= 
        select_ln131_22_fu_1502_p3 when (icmp_ln131_18_fu_1490_p2(0) = '1') else 
        ap_const_lv12_7F;
    select_ln131_24_fu_1535_p3 <= 
        add_ln131_11_fu_1529_p2 when (icmp_ln131_19_fu_1523_p2(0) = '1') else 
        ap_const_lv12_7F;
    select_ln131_25_fu_1639_p3 <= 
        sext_ln131_9_fu_1619_p1 when (and_ln131_4_fu_1615_p2(0) = '1') else 
        kPhiCorrtable_L1_q1;
    select_ln131_26_fu_1647_p3 <= 
        sext_ln131_11_fu_1627_p1 when (and_ln131_5_fu_1623_p2(0) = '1') else 
        select_ln131_25_fu_1639_p3;
    select_ln131_27_fu_1659_p3 <= 
        kPhiCorrtable_L4_q1 when (and_ln131_6_fu_1631_p2(0) = '1') else 
        sext_ln131_15_fu_1655_p1;
    select_ln131_28_fu_1667_p3 <= 
        kPhiCorrtable_L5_q1 when (and_ln131_7_fu_1635_p2(0) = '1') else 
        select_ln131_27_fu_1659_p3;
    select_ln131_29_fu_1675_p3 <= 
        kPhiCorrtable_L6_q1 when (icmp_ln131_19_reg_2322(0) = '1') else 
        select_ln131_28_fu_1667_p3;
    select_ln131_2_fu_1122_p3 <= 
        select_ln131_1_fu_1114_p3 when (icmp_ln131_2_fu_1102_p2(0) = '1') else 
        ap_const_lv12_3F;
    select_ln131_3_fu_1163_p3 <= 
        add_ln131_2_fu_1157_p2 when (icmp_ln131_3_fu_1145_p2(0) = '1') else 
        ap_const_lv12_3F;
    select_ln131_4_fu_1171_p3 <= 
        select_ln131_3_fu_1163_p3 when (icmp_ln131_4_fu_1151_p2(0) = '1') else 
        ap_const_lv12_3F;
    select_ln131_5_fu_1202_p3 <= 
        add_ln131_3_fu_1196_p2 when (icmp_ln131_5_fu_1184_p2(0) = '1') else 
        ap_const_lv12_7F;
    select_ln131_6_fu_1210_p3 <= 
        select_ln131_5_fu_1202_p3 when (icmp_ln131_6_fu_1190_p2(0) = '1') else 
        ap_const_lv12_7F;
    select_ln131_7_fu_1241_p3 <= 
        add_ln131_4_fu_1235_p2 when (icmp_ln131_7_fu_1223_p2(0) = '1') else 
        ap_const_lv12_7F;
    select_ln131_8_fu_1249_p3 <= 
        select_ln131_7_fu_1241_p3 when (icmp_ln131_8_fu_1229_p2(0) = '1') else 
        ap_const_lv12_7F;
    select_ln131_9_fu_1274_p3 <= 
        add_ln131_5_fu_1268_p2 when (icmp_ln131_9_fu_1262_p2(0) = '1') else 
        ap_const_lv12_7F;
    select_ln131_fu_1077_p3 <= 
        ap_const_lv64_3F when (icmp_ln131_fu_1071_p2(0) = '1') else 
        zext_ln131_1_fu_1053_p1;
    select_ln647_1_fu_2003_p3 <= 
        tmp_26_fu_1989_p3 when (p_phi_reg_643_pp0_iter3_reg(0) = '1') else 
        tmp_27_fu_1996_p3;
    select_ln647_2_fu_883_p3 <= 
        tmp_6_fu_847_p4 when (icmp_ln647_fu_833_p2(0) = '1') else 
        ap_phi_mux_hLinkWord_V174_phi_phi_fu_672_p4;
    select_ln647_3_fu_891_p3 <= 
        sub_ln647_1_fu_863_p2 when (icmp_ln647_fu_833_p2(0) = '1') else 
        zext_ln647_fu_839_p1;
    select_ln647_4_fu_1981_p3 <= 
        trunc_ln647_1_fu_1973_p1 when (p_phi_reg_643_pp0_iter3_reg(0) = '1') else 
        trunc_ln647_2_fu_1977_p1;
    select_ln647_fu_875_p3 <= 
        sub_ln647_fu_857_p2 when (icmp_ln647_fu_833_p2(0) = '1') else 
        sub_ln647_2_fu_869_p2;
    select_ln681_1_fu_1842_p3 <= 
        ap_const_lv33_7 when (icmp_ln879_1_reg_2159_pp0_iter3_reg(0) = '1') else 
        ap_const_lv33_3;
    select_ln681_2_fu_1953_p3 <= 
        zext_ln681_2_fu_1935_p1 when (icmp_ln879_1_reg_2159_pp0_iter3_reg(0) = '1') else 
        zext_ln681_3_fu_1949_p1;
    select_ln681_3_fu_1960_p3 <= 
        ap_const_lv33_7 when (icmp_ln879_1_reg_2159_pp0_iter3_reg(0) = '1') else 
        ap_const_lv33_3;
    select_ln681_fu_1835_p3 <= 
        zext_ln681_fu_1817_p1 when (icmp_ln879_1_reg_2159_pp0_iter3_reg(0) = '1') else 
        zext_ln681_1_fu_1831_p1;
    select_ln879_fu_2011_p3 <= 
        select_ln647_4_fu_1981_p3 when (tmp_8_fu_1729_p3(0) = '1') else 
        select_ln647_1_fu_2003_p3;
        sext_ln131_10_fu_1440_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln131_19_fu_1432_p3),64));

        sext_ln131_11_fu_1627_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kPhiCorrtable_L3_q1),15));

        sext_ln131_12_fu_1479_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln131_21_fu_1471_p3),64));

        sext_ln131_13_fu_1518_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln131_23_fu_1510_p3),64));

        sext_ln131_14_fu_1543_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln131_24_fu_1535_p3),64));

        sext_ln131_15_fu_1655_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln131_26_fu_1647_p3),16));

        sext_ln131_1_fu_1552_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kPhiCorrtable_L2_q0),15));

        sext_ln131_2_fu_1179_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln131_4_fu_1171_p3),64));

        sext_ln131_3_fu_1560_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kPhiCorrtable_L3_q0),15));

        sext_ln131_4_fu_1218_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln131_6_fu_1210_p3),64));

        sext_ln131_5_fu_1257_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln131_8_fu_1249_p3),64));

        sext_ln131_6_fu_1282_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln131_9_fu_1274_p3),64));

        sext_ln131_7_fu_1588_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln131_11_fu_1580_p3),16));

        sext_ln131_8_fu_1391_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln131_17_fu_1383_p3),64));

        sext_ln131_9_fu_1619_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kPhiCorrtable_L2_q1),15));

        sext_ln131_fu_1130_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln131_2_fu_1122_p3),64));

        sext_ln1354_1_fu_1877_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_8_fu_1871_p2),32));

        sext_ln1354_fu_1759_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_fu_1753_p2),32));

        sext_ln215_1_fu_1868_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln131_29_reg_2337),17));

        sext_ln215_fu_1750_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln131_14_reg_2332),19));

    sub_ln647_1_fu_863_p2 <= std_logic_vector(signed(ap_const_lv5_13) - signed(zext_ln647_fu_839_p1));
    sub_ln647_2_fu_869_p2 <= std_logic_vector(unsigned(zext_ln647_1_fu_843_p1) - unsigned(zext_ln647_fu_839_p1));
    sub_ln647_3_fu_899_p2 <= std_logic_vector(signed(ap_const_lv5_13) - signed(select_ln647_fu_875_p3));
    sub_ln647_fu_857_p2 <= std_logic_vector(unsigned(zext_ln647_fu_839_p1) - unsigned(zext_ln647_1_fu_843_p1));
    tmp_10_fu_1061_p4 <= add_ln131_fu_1047_p2(10 downto 6);
    tmp_11_fu_1086_p4 <= add_ln131_fu_1047_p2(10 downto 8);
    tmp_12_fu_1135_p4 <= add_ln131_fu_1047_p2(10 downto 9);
    tmp_13_fu_1737_p4 <= hStub_V_reg_2115_pp0_iter3_reg(23 downto 7);
    tmp_14_fu_1763_p3 <= ret_V_fu_1753_p2(18 downto 18);
    tmp_15_fu_1783_p4 <= hPhiCorr_V_1_fu_1771_p3(31 downto 17);
    tmp_16_fu_1807_p4 <= p_Val2_2_fu_1799_p3(16 downto 14);
    tmp_17_fu_1821_p4 <= p_Val2_2_fu_1799_p3(16 downto 15);
    tmp_18_fu_1322_p4 <= add_ln131_6_fu_1308_p2(10 downto 6);
    tmp_19_fu_1347_p4 <= add_ln131_6_fu_1308_p2(10 downto 8);
    tmp_1_fu_1035_p3 <= (hBend_V_fu_1011_p4 & rbin_V_fu_1029_p2);
    tmp_20_fu_1396_p4 <= add_ln131_6_fu_1308_p2(10 downto 9);
    tmp_21_fu_1855_p4 <= hStub_V_reg_2115_pp0_iter3_reg(19 downto 6);
    tmp_22_fu_1881_p3 <= ret_V_8_fu_1871_p2(16 downto 16);
    tmp_23_fu_1901_p4 <= hPhiCorr_V_3_fu_1889_p3(31 downto 14);
    tmp_24_fu_1925_p4 <= p_Val2_4_fu_1917_p3(13 downto 11);
    tmp_25_fu_1939_p4 <= p_Val2_4_fu_1917_p3(13 downto 12);
    tmp_26_fu_1989_p3 <= hStub_V_reg_2115_pp0_iter3_reg(23 downto 23);
    tmp_27_fu_1996_p3 <= hStub_V_reg_2115_pp0_iter3_reg(18 downto 18);
    tmp_2_fu_1296_p3 <= (hBend_V_1_fu_1287_p4 & rbin_V_fu_1029_p2);
    tmp_4_fu_756_p3 <= hPhBnWord_V(3 downto 3);
    tmp_5_fu_770_p3 <= hPhBnWord_V(6 downto 6);
    
    tmp_6_fu_847_p4_proc : process(ap_phi_mux_hLinkWord_V174_phi_phi_fu_672_p4)
    variable vlo_cpy : STD_LOGIC_VECTOR(20+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(20+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(20 - 1 downto 0);
    variable tmp_6_fu_847_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(20 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(20 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(20 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_13(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := ap_phi_mux_hLinkWord_V174_phi_phi_fu_672_p4;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(20-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(20-1-unsigned(ap_const_lv32_13(5-1 downto 0)));
            for tmp_6_fu_847_p4_i in 0 to 20-1 loop
                v0_cpy(tmp_6_fu_847_p4_i) := ap_phi_mux_hLinkWord_V174_phi_phi_fu_672_p4(20-1-tmp_6_fu_847_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(20-1 downto 0)))));
        res_mask := res_mask(20-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_6_fu_847_p4 <= resvalue(20-1 downto 0);
    end process;

    tmp_7_fu_1705_p3 <= hStub_V_reg_2115_pp0_iter3_reg(2 downto 2);
    tmp_8_fu_1729_p3 <= hLinkWord_V174_phi_reg_668_pp0_iter3_reg(to_integer(unsigned(zext_ln555_fu_1691_p1)) downto to_integer(unsigned(zext_ln555_fu_1691_p1))) when (to_integer(unsigned(zext_ln555_fu_1691_p1))>= 0 and to_integer(unsigned(zext_ln555_fu_1691_p1))<=19) else "-";
    tmp_9_fu_2070_p3 <= (trunc_ln321_reg_2355 & hEntries_V_fu_2041_p3);
    trunc_ln113_fu_1007_p1 <= cLUT_index(11 - 1 downto 0);
    trunc_ln136_1_fu_1897_p1 <= hPhiCorr_V_3_fu_1889_p3(14 - 1 downto 0);
    trunc_ln136_fu_1779_p1 <= hPhiCorr_V_1_fu_1771_p3(17 - 1 downto 0);
    trunc_ln212_fu_746_p1 <= hPhBnWord_V(1 - 1 downto 0);
    trunc_ln2_fu_1020_p4 <= hStub_V_reg_2115_pp0_iter1_reg(38 downto 36);
    trunc_ln321_fu_2037_p1 <= bx_V173_phi_reg_655_pp0_iter3_reg(1 - 1 downto 0);
    trunc_ln647_1_fu_1973_p1 <= p_Result_s_fu_1849_p2(1 - 1 downto 0);
    trunc_ln647_2_fu_1977_p1 <= p_Result_1_fu_1967_p2(1 - 1 downto 0);
    trunc_ln647_fu_801_p1 <= hStub_V_reg_2115(1 - 1 downto 0);
    xor_ln212_1_fu_764_p2 <= (tmp_4_fu_756_p3 xor ap_const_lv1_1);
    xor_ln212_2_fu_778_p2 <= (tmp_5_fu_770_p3 xor ap_const_lv1_1);
    xor_ln212_fu_750_p2 <= (trunc_ln212_fu_746_p1 xor ap_const_lv1_1);
    xor_ln338_1_fu_2019_p2 <= (and_ln212_2_fu_1723_p2 xor and_ln212_1_fu_1712_p2);
    xor_ln338_2_fu_2025_p2 <= (select_ln879_fu_2011_p3 xor and_ln212_fu_1699_p2);
    xor_ln338_fu_2031_p2 <= (xor_ln338_2_fu_2025_p2 xor xor_ln338_1_fu_2019_p2);
    zext_ln131_1_fu_1053_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln131_fu_1047_p2),64));
    zext_ln131_2_fu_1057_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln131_fu_1047_p2),12));
    zext_ln131_3_fu_1314_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln131_6_fu_1308_p2),64));
    zext_ln131_4_fu_1304_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_1296_p3),11));
    zext_ln131_5_fu_1318_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln131_6_fu_1308_p2),12));
    zext_ln131_fu_1043_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_1035_p3),11));
    zext_ln215_1_fu_1864_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_fu_1855_p4),17));
    zext_ln215_fu_1746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_1737_p4),19));
    zext_ln321_fu_2077_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_2070_p3),64));
    zext_ln555_fu_1691_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Hi_reg_2154_pp0_iter3_reg),32));
    zext_ln647_1_fu_843_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Hi_1_fu_821_p2),5));
    zext_ln647_2_fu_905_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln647_3_fu_891_p3),20));
    zext_ln647_3_fu_909_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln647_3_fu_899_p2),20));
    zext_ln647_fu_839_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Lo_fu_827_p2),5));
    zext_ln681_1_fu_1831_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_fu_1821_p4),33));
    zext_ln681_2_fu_1935_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_fu_1925_p4),33));
    zext_ln681_3_fu_1949_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_25_fu_1939_p4),33));
    zext_ln681_fu_1817_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_fu_1807_p4),33));
end behav;
